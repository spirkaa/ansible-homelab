---
- name: Load rclone configs
  ansible.builtin.include_vars: vars/rclone_configs.vault.yml
  no_log: true

- name: Tasks for specific hosts
  when: inventory_hostname == "spsrv"
  block:
    - name: Check whether rclone is installed
      ansible.builtin.command: >
        dpkg-query -W rclone
      ignore_errors: true
      register: rclone_is_installed
      changed_when: rclone_is_installed.rc != 0

    - name: Download and install package
      when: rclone_version[1:] not in rclone_is_installed.stdout
      block:
        - name: Download rclone package
          ansible.builtin.get_url:
            url: "{{ rclone_url }}"
            dest: /tmp/{{ rclone_url | basename }}
            mode: "0644"

        - name: Install rclone package
          ansible.builtin.apt:
            deb: /tmp/{{ rclone_url | basename }}
            state: present

    - name: Create config dir
      ansible.builtin.file:
        path: "{{ rclone_config_location | dirname }}"
        state: directory
        mode: "0700"

    - name: Copy config
      ansible.builtin.template:
        src: rclone.conf.j2
        dest: "{{ rclone_config_location }}"
        mode: "0600"
        force: false
      no_log: true

    - name: Create jobs dir
      ansible.builtin.file:
        path: "{{ rclone_jobs_path }}"
        state: directory
        recurse: true

    - name: Copy jobs
      ansible.builtin.template:
        src: rclone-job.j2
        dest: "{{ rclone_jobs_path }}/{{ item.name }}"
        mode: "0755"
      loop: "{{ rclone_jobs }}"

    - name: Setup cron
      ansible.builtin.cron:
        user: "{{ item.user | default('root') }}"
        job: "{{ rclone_jobs_path }}/{{ item.name }} >/dev/null 2>&1 && curl -fsS --retry 3 {{ inventory__healthchecksio_url }}/{{ item.name }} >/dev/null 2>&1"
        name: "{{ item.name }}"
        weekday: "{{ item.weekday | default('*') | string }}"
        minute: "{{ item.minute | default('00') | string }}"
        hour: "{{ item.hour | default('00') | string }}"
        dom: "{{ item.dom | default('*') | string }}"
        disabled: "{{ item.disabled | default(false) }}"
      loop: "{{ rclone_jobs }}"
      no_log: true
