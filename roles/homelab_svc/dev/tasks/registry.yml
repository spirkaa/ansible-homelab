---
- name: registry - create dir
  ansible.builtin.file:
    path: "{{ dev_app_path }}/registry/config"
    state: directory
    recurse: true
  tags: registry

- name: registry - copy files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ dev_app_path }}/{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: config.yml.j2, dest: registry/config/config.yml }
  notify: registry - restart
  tags: registry

- name: registry - start
  community.docker.docker_container:
    name: registry
    image: "{{ registry_image }}"
    pull: true
    env:
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
    volumes:
      - "{{ dev_app_path }}/registry/config/config.yml:/etc/docker/registry/config.yml"
      - "{{ dev_app_path }}/registry/data:/var/lib/registry"
    networks:
      - name: "{{ app_network_name }}"
    networks_cli_compatible: true
    restart_policy: unless-stopped
    state: started
  register: registry_start
  tags: registry

- name: registry-ui - start
  community.docker.docker_container:
    name: registry-ui
    image: "{{ registry_ui_image }}"
    pull: true
    env:
      REGISTRY_TITLE: "{{ app_base_domain }}"
      DELETE_IMAGES: "true"
      SHOW_CONTENT_DIGEST: "true"
      SINGLE_REGISTRY: "true"
      NGINX_PROXY_PASS_URL: "http://registry:5000"
    networks:
      - name: "{{ app_network_name }}"
    networks_cli_compatible: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.registry-ui.rule: "HostRegexp(`registry(.{{ app_base_domain }})?`)"
      traefik.http.services.registry-ui.loadbalancer.server.port: "80"
      traefik.http.routers.registry-ui.entrypoints: "websecure"
      traefik.http.routers.registry-ui.tls: "true"
    restart_policy: unless-stopped
    state: started
  tags: registry
