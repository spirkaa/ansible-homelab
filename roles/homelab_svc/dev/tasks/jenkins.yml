---
- name: jenkins - create dir
  ansible.builtin.file:
    path: "{{ dev_app_path }}/{{ jenkins_home }}/casc_configs"
    state: directory
    recurse: true
  tags: jenkins

- name: jenkins - copy files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ dev_app_path }}/{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: jenkins.yaml.j2, dest: "{{ jenkins_home }}/casc_configs/jenkins.yaml" }
  notify: jenkins - restart
  no_log: true
  tags: jenkins

- name: jenkins - log into registry
  community.docker.docker_login:
    registry_url: "{{ gitea_domain }}"
    username: "{{ jenkins_gitea_user }}"
    password: "{{ jenkins_gitea_user_password }}"
    reauthorize: true
  register: _docker_login
  retries: 15
  delay: 1
  until: _docker_login is not failed
  tags: jenkins

- name: jenkins - start
  community.docker.docker_container:
    name: jenkins
    image: "{{ jenkins_image }}"
    image_name_mismatch: recreate
    pull: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    env:
      CASC_JENKINS_CONFIG: /var/jenkins_home/casc_configs/jenkins.yaml
    volumes:
      - "/usr/bin/docker:/usr/bin/docker"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ dev_app_path }}/{{ jenkins_home }}:/var/jenkins_home"
    networks:
      - name: "{{ app_network_name }}"
    networks_cli_compatible: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.jenkins.rule: "HostRegexp(`jenkins(.{{ app_base_domain }})?`)"
      traefik.http.services.jenkins.loadbalancer.server.port: "8080"
      traefik.http.routers.jenkins.entrypoints: "websecure"
      traefik.http.routers.jenkins.tls: "true"
    restart_policy: unless-stopped
    state: started
  register: jenkins_start
  no_log: true
  tags: jenkins
