---
- name: pihole - create dir
  ansible.builtin.file:
    path: "{{ app_path }}/pihole/config/dnsmasq.d"
    state: directory
    recurse: true
  tags: pihole

- name: pihole - copy files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ app_path }}/pihole/{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: 10-internal.conf.j2, dest: config/dnsmasq.d/10-internal.conf }
    - { src: pihole-updatelists.conf.j2, dest: config/pihole-updatelists.conf }
  notify: pihole - restart
  tags: pihole

- name: pihole - start
  community.docker.docker_container:
    name: pihole
    image: "{{ pihole_image }}"
    pull: true
    hostname: "pihole.{{ app_base_domain }}"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    volumes:
      - "{{ app_path }}/pihole/config/pihole:/etc/pihole"
      - "{{ app_path }}/pihole/config/dnsmasq.d:/etc/dnsmasq.d"
      - "{{ app_path }}/pihole/config/pihole-updatelists.conf:/etc/pihole-updatelists.conf"
    env:
      TZ: "{{ tz }}"
      WEBPASSWORD: "{{ pihole_web_pass }}"
      PIHOLE_DNS_: "1.1.1.1;1.0.0.1"
      DNSSEC: "True"
    dns_servers:
      - 127.0.0.1
      - 1.1.1.1
    networks:
      - name: "{{ app_network_name }}"
    networks_cli_compatible: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.pihole.rule: "HostRegexp(`{catchall:.*}`)"
      traefik.http.services.pihole.loadbalancer.server.port: "80"
      traefik.http.routers.pihole.entrypoints: "websecure"
      traefik.http.routers.pihole.tls: "true"
    restart_policy: unless-stopped
    state: started
  register: pihole_start
  notify: pihole - update lists
  no_log: true
  tags: pihole

- name: pihole - wait for container healthy state
  community.docker.docker_container_info:
    name: pihole
  register: result
  retries: 10
  delay: 6
  until: result.container.State.Health.Status == 'healthy'
  when: pihole_start.changed
  no_log: true
  tags: pihole
