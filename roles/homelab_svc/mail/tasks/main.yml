---
- name: autodiscover - start
  community.docker.docker_container:
    name: autodiscover
    image: "{{ mail_autodiscover_image }}"
    pull: true
    hostname: autodiscover
    domainname: "{{ mail_domainname }}"
    ports:
      - "8000:8000"
    env:
      COMPANY_NAME: "{{ mail_domainname }}"
      SUPPORT_URL: "https://autodiscover.{{ mail_domainname }}"
      DOMAIN: "{{ mail_domainname }}"
      IMAP_HOST: "imap.{{ mail_domainname }}"
      IMAP_PORT: "993"
      IMAP_SOCKET: "SSL"
      SMTP_HOST: "smtp.{{ mail_domainname }}"
      SMTP_PORT: "587"
      SMTP_SOCKET: "STARTTLS"
      PROFILE_IDENTIFIER: "ru.devmem.autodiscover"
      PROFILE_UUID: "92943D26-CAB3-4086-897D-DC6C0D8B1E86"
      MAIL_UUID: "7A981A9E-D5D0-4EF8-87FE-39FD6A506FAC"
    restart_policy: unless-stopped
    state: started
  tags: mail

- name: mail - create dir
  ansible.builtin.file:
    path: "{{ mail_cert_path_host }}"
    state: directory
    recurse: true
  tags: mail

- name: mail - copy certificate
  ansible.builtin.copy:
    content: "{{ inventory__ssl_certificate }}"
    dest: "{{ mail_cert_path_host }}/{{ mail_cert_name }}.crt"
    mode: "0644"
  notify: mail - restart
  tags: mail

- name: mail - copy certificate private key
  ansible.builtin.copy:
    content: "{{ inventory__ssl_private_key }}"
    dest: "{{ mail_cert_path_host }}/{{ mail_cert_name }}.key"
    mode: "0644"
  notify: mail - restart
  no_log: true
  tags: mail

- name: mail - copy env file
  ansible.builtin.template:
    src: env-mailserver.j2
    dest: "{{ app_path }}/env-mailserver"
    mode: "0644"
  tags: mail

- name: mail - copy conf files
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: "{{ app_path }}"
    mode: "0644"
  loop:
    - 10-master.conf
    - 15-mailboxes.conf
    - jail.local
  tags: mail

- name: mail - download setup.sh
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/docker-mailserver/docker-mailserver/v{{ mailserver_version }}/setup.sh
    dest: "{{ app_path }}"
    mode: "0755"
  tags: mail

- name: mail - start
  community.docker.docker_container:
    name: mail
    image: "{{ mail_image }}"
    pull: true
    hostname: "{{ mail_hostname }}"
    domainname: "{{ mail_domainname }}"
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
    env_file: "{{ app_path }}/env-mailserver"
    volumes:
      - "{{ app_path }}/data:/var/mail"
      - "{{ app_path }}/state:/var/mail-state"
      - "{{ app_path }}/log:/var/log/mail"
      - "{{ mail_config_path_host }}/:/tmp/docker-mailserver/"
      - "{{ app_path }}/certs:{{ mail_cert_path }}:ro"
      - "{{ app_path }}/10-master.conf:/etc/dovecot/conf.d/10-master.conf:ro"
      - "{{ app_path }}/15-mailboxes.conf:/etc/dovecot/conf.d/15-mailboxes.conf:ro"
      - "{{ app_path }}/jail.local:/etc/fail2ban/jail.local:ro"
    capabilities:
      - net_admin
      - sys_ptrace
    restart_policy: unless-stopped
    state: started
  register: mail_start
  no_log: true
  tags: mail

- name: mail - customize running container
  ansible.builtin.command: >
    docker exec mail sh -c '{{ item }}'
  changed_when: true
  when: mail_start.changed
  notify: mail - restart
  loop:
    - echo "TLS_REQCERT allow" >> /etc/ldap/ldap.conf
    - sed -i '\''s/{ type <addr_type>\\; \\}/{ type <addr_type>\\; flags interval\\; \\}/g'\'' /etc/fail2ban/action.d/nftables.conf
  tags: mail

- name: mail - generate dkim
  ansible.builtin.command: >
    {{ app_path }}/setup.sh config dkim keysize 4096 domain {{ mail_domainname }}
  register: dkim_result
  changed_when: '"Creating DKIM private key" in dkim_result.stdout'
  notify: mail - restart
  tags: mail

- name: mail - dkim key
  when: dkim_result.changed
  block:
    - name: mail - get dkim key
      ansible.builtin.command: >
        cat {{ mail_config_path_host }}/opendkim/keys/{{ mail_domainname }}/mail.txt
      register: dkim_key
      changed_when: false
      tags: mail

    - name: mail - print dkim key
      ansible.builtin.debug:
        var: dkim_key.stdout_lines
      tags: mail

- name: mail - configure freeipa
  ansible.builtin.include_tasks: ../mgmt/tasks/freeipa_service_bind.yml
  vars:
    freeipa_service_bind_sysaccount_dn: "{{ mail_ldap_bind_dn }}"
    freeipa_service_bind_sysaccount_pass: "{{ mail_ldap_bind_pw }}"
    freeipa_service_bind_group_name: "{{ mail_ldap_access_group }}"
  args:
    apply:
      tags: mail
  tags: mail
