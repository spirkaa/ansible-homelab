---
- name: traefik - create network
  community.docker.docker_network:
    name: "{{ traefik_network_name }}"
  tags: traefik

- name: traefik - create dir
  ansible.builtin.file:
    path: "{{ traefik_cert_path_host }}"
    state: directory
    recurse: true
  tags: traefik

- name: traefik - copy certificate
  ansible.builtin.copy:
    content: "{{ inventory__ssl_certificate }}"
    dest: "{{ traefik_cert_path_host }}/{{ traefik_cert_name }}.crt"
    mode: 0644
  notify: traefik - restart
  tags: traefik

- name: traefik - copy certificate private key
  ansible.builtin.copy:
    content: "{{ inventory__ssl_private_key }}"
    dest: "{{ traefik_cert_path_host }}/{{ traefik_cert_name }}.key"
    mode: 0644
  notify: traefik - restart
  no_log: true
  tags: traefik

- name: traefik - copy config
  ansible.builtin.template:
    src: dyn.toml.j2
    dest: "{{ traefik_config_file_host }}"
    mode: 0644
  notify: traefik - restart
  tags: traefik

- name: traefik - start
  community.docker.docker_container:
    name: traefik
    image: "{{ traefik_image }}"
    image_name_mismatch: recreate
    pull: true
    ports:
      - "{{ traefik_web_port }}:80"
      - "{{ traefik_websecure_port }}:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ traefik_config_file_host }}:{{ traefik_config_file }}"
      - "{{ traefik_cert_path_host }}:{{ traefik_cert_path }}"
    networks:
      - name: "{{ traefik_network_name }}"
    networks_cli_compatible: true
    command:
      --log.level={{ traefik_log_level }}
      --api=true
      --metrics.prometheus=true
      --metrics.prometheus.entryPoint=metrics
      --metrics.prometheus.manualrouting=true
      --providers.file.filename={{ traefik_config_file }}
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      --entryPoints.metrics.address=:8080
      --entrypoints.web.address=:{{ traefik_web_port }}
      --entrypoints.web.http.redirections.entryPoint.to=websecure
      --entrypoints.web.http.redirections.entryPoint.scheme=https
      --entrypoints.websecure.address=:{{ traefik_websecure_port }}
      --serverstransport.insecureskipverify=true
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: "{{ traefik_hostname_rule }}"
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.routers.traefik.entrypoints: "websecure"
      traefik.http.routers.traefik.tls: "true"
      traefik.http.routers.traefik-metrics.rule: "{{ traefik_hostname_rule }} && PathPrefix(`/metrics`)"
      traefik.http.routers.traefik-metrics.service: "prometheus@internal"
      traefik.http.routers.traefik-metrics.entrypoints: "websecure"
      traefik.http.routers.traefik-metrics.tls: "true"
    restart_policy: unless-stopped
    state: started
  register: traefik_start
  tags: traefik
