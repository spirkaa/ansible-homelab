---
- name: wireguard | Install package
  community.general.opkg:
    name: "{{ item }}"
    state: present
  loop:
    - wireguard-tools
    - luci-proto-wireguard
    - qrencode

- name: wireguard | Add interface
  uci:
    command: add
    config: network
    type: interface
    name: "{{ item.interface }}"
  notify:
    - Uci commit
    - Reload network
  loop_control:
    label: "{{ item.interface }}"
  loop: "{{ openwrt_wireguard }}"

- name: wireguard | Configure interface
  uci:
    command: set
    config: network
    section: "{{ item.interface }}"
    value:
      proto: wireguard
      private_key: "{{ item.private_key }}"
      listen_port: "{{ item.listen_port | default(omit) }}"
      addresses:
        - "{{ item.addresses }}"
  notify:
    - Uci commit
    - Restart wireguard
  loop_control:
    label: "{{ item.interface }}"
  loop: "{{ openwrt_wireguard }}"

- name: wireguard | Configure peers
  ansible.builtin.include_tasks: wireguard_peers.yml
  loop_control:
    label: "{{ item.interface }}"
  loop: "{{ openwrt_wireguard }}"

- name: wireguard | Configure firewall zone "lan" - add_list
  uci:
    command: add_list
    config: firewall
    section: "@zone[0]"
    option: network
    value: "{{ item.interface }}"
    unique: true
  notify:
    - Uci commit
    - Reload firewall
  loop_control:
    label: "{{ item.interface }}"
  loop: "{{ openwrt_wireguard }}"
  when:
    - item.firewall_zone is defined
    - item.firewall_zone == "lan"

- name: wireguard | Configure firewall zone "lan" - enable masquerading
  uci:
    command: set
    config: firewall
    section: "@zone[0]"
    value:
      masq: 1
  notify:
    - Uci commit
    - Reload firewall
  when: openwrt_wireguard[0].server is defined

- name: wireguard | Configure firewall zone "lan" - add_list
  uci:
    command: add_list
    config: firewall
    section: "@zone[0]"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    unique: true
  loop:
    - { option: network, value: "{{ openwrt_wireguard[0].interface }}" }
    - { option: masq_src, value: "{{ openwrt_wireguard[0].addresses }}" }
  notify:
    - Uci commit
    - Reload firewall
  when: openwrt_wireguard[0].server is defined

- name: wireguard | Configure mark traffic rule "deluge"
  uci:
    command: section
    config: firewall
    type: rule
    find_by:
      name: deluge
    value:
      src: lan
      dest: "*"
      proto:
        - all
      src_ip:
        - "{{ (openwrt_wireguard[0].peers | selectattr('description', 'search', 'deluge'))[0].allowed_ips | ansible.utils.ipaddr('address') }}"
      set_mark: "0x1"
      target: MARK
      family: ipv4
  notify:
    - Uci commit
    - Reload firewall
  when: openwrt_wireguard[0].server is defined
