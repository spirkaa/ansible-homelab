---
- name: wireguard - install packages
  ansible.builtin.package:
    state: present
    name:
      - iptables-persistent

- name: wireguard - create directories
  ansible.builtin.file:
    path: "{{ vps_wg_config_path }}"
    state: directory
    mode: 0700

- name: wireguard - copy configuration
  ansible.builtin.template:
    src: wireguard.conf.j2
    dest: "{{ vps_wg_config_path }}/{{ vps_wg_interface }}.conf"
    mode: 0600
  no_log: true
  notify: restart wireguard

- name: wireguard - configure iptables - accept forward
  ansible.builtin.iptables:
    chain: FORWARD
    policy: ACCEPT
  notify: save iptables

- name: wireguard - configure iptables - forwarding from {{ vps_wan_interface }} to {{ vps_wg_interface }}
  ansible.builtin.iptables:
    chain: FORWARD
    in_interface: "{{ vps_wan_interface }}"
    out_interface: "{{ vps_wg_interface }}"
    jump: ACCEPT
    action: insert
    comment: "forwarding from {{ vps_wan_interface }} to {{ vps_wg_interface }}"
  notify: save iptables

- name: wireguard - configure iptables - forwarding from {{ vps_wg_interface }} to {{ vps_wan_interface }}
  ansible.builtin.iptables:
    chain: FORWARD
    in_interface: "{{ vps_wg_interface }}"
    out_interface: "{{ vps_wan_interface }}"
    ctstate:
      - RELATED
      - ESTABLISHED
    jump: ACCEPT
    action: insert
    comment: "forwarding from {{ vps_wg_interface }} to {{ vps_wan_interface }}"
  notify: save iptables

- name: wireguard - configure iptables - masquerade
  ansible.builtin.iptables:
    table: nat
    chain: POSTROUTING
    out_interface: "{{ vps_wan_interface }}"
    jump: MASQUERADE
    action: insert
    comment: "masquerade for {{ vps_wan_interface }}"
  notify: save iptables

# - name: wireguard - configure iptables - forward ports
#   ansible.builtin.iptables:
#     table: nat
#     chain: PREROUTING
#     in_interface: "{{ vps_wan_interface }}"
#     protocol: "{{ item.proto }}"
#     destination_port: "{{ item.port }}"
#     to_destination: "{{ item.to_dest }}:{{ item.to_port }}"
#     jump: DNAT
#     action: insert
#     comment: "{{ item.comment }}"
#   loop: "{{ vps_iptables_forward_ports }}"
#   notify: save iptables

# - name: wireguard - configure iptables - SNAT
#   ansible.builtin.iptables:
#     table: nat
#     chain: POSTROUTING
#     source: "{{ vps_wg_peers[0].public_ip }}"
#     protocol: "{{ item.proto }}"
#     destination_port: "{{ item.to_port }}"
#     to_source: "{{ vps_wg_private_ip }}"
#     out_interface: "{{ vps_wg_interface }}"
#     jump: SNAT
#     action: insert
#     comment: "{{ item.comment }}"
#   loop: "{{ vps_iptables_forward_ports }}"
#   notify: save iptables
