---
- name: "{{ hostname }} - Create ct"
  when: not pve_resource_exists
  block:
    - name: "{{ hostname }} - Create"
      ansible.builtin.command: >
        pct create {{ vmid }} {{ ct_template }}
          --pool {{ resourse_pool }}
          --hostname {{ hostname }}
          --description "{{ comment }}"
          --cores {{ cores }}
          --memory {{ mem }}
          --nameserver {{ net_dns }}
          --net0 name=eth0,bridge={{ net_br }},gw={{ net_gw }},ip={{ net_ip }}/{{ net_cidr }},firewall=0{{ net_tag }}{{ net_vlan }}
          --rootfs {{ disk_storage }}:{{ disk_size }}
          --password {{ user_pass }}
          --searchdomain {{ net_domain }}
          --ssh-public-keys {{ ssh_keys }}
          {{ ct_other_options | default('', true) }}
      changed_when: true
      no_log: true

    - name: "{{ hostname }} - Allow Docker"
      ansible.builtin.shell: >
        echo "lxc.apparmor.profile: unconfined\nlxc.cap.drop: \nlxc.cgroup2.devices.allow: a" >> /etc/pve/lxc/{{ vmid }}.conf
      changed_when: true

    - name: "{{ hostname }} - lxc options"
      when: lxc_options is defined
      block:
        - name: "{{ hostname }} - Copy config to tmp"
          ansible.builtin.copy:
            src: /etc/pve/lxc/{{ vmid }}.conf
            dest: /tmp/{{ vmid }}.conf
            remote_src: true
            owner: root
            group: www-data
            mode: preserve

        - name: "{{ hostname }} - Add lxc options"
          ansible.builtin.lineinfile:
            path: "/tmp/{{ vmid }}.conf"
            line: "{{ lxc_options_item }}"
          loop_control:
            loop_var: lxc_options_item
          loop: "{{ lxc_options }}"

        - name: "{{ hostname }} - Copy config back"
          ansible.builtin.copy:
            src: /tmp/{{ vmid }}.conf
            dest: /etc/pve/lxc/{{ vmid }}.conf
            remote_src: true
            owner: root
            group: www-data
            mode: preserve
